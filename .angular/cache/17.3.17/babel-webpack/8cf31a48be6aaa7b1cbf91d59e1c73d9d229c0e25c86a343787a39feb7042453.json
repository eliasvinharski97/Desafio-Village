{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/common/http\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@angular/common\";\nfunction AccountOperationsComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 1)(1, \"div\", 2)(2, \"h2\");\n    i0.ɵɵtext(3, \"Account Details\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(4, \"div\", 3)(5, \"p\")(6, \"strong\");\n    i0.ɵɵtext(7, \"Account ID:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"p\")(10, \"strong\");\n    i0.ɵɵtext(11, \"Balance:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(12);\n    i0.ɵɵpipe(13, \"currency\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(14, \"p\")(15, \"strong\");\n    i0.ɵɵtext(16, \"Daily Withdrawal Limit:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(17);\n    i0.ɵɵpipe(18, \"currency\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(19, \"p\")(20, \"strong\");\n    i0.ɵɵtext(21, \"Status:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(22);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(8);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.account.id, \"\");\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(13, 4, ctx_r0.account.balance), \"\");\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(18, 6, ctx_r0.account.dailyWithdrawalLimit), \"\");\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.account.active ? \"Active\" : \"Blocked\", \"\");\n  }\n}\nexport class AccountOperationsComponent {\n  constructor(route, http, fb) {\n    this.route = route;\n    this.http = http;\n    this.fb = fb;\n    this.account = null;\n    this.depositForm = this.fb.group({\n      amount: ['', [Validators.required, Validators.min(0.01)]]\n    });\n    this.withdrawForm = this.fb.group({\n      amount: ['', [Validators.required, Validators.min(0.01)]]\n    });\n  }\n  ngOnInit() {\n    const accountId = this.route.snapshot.paramMap.get('id');\n    if (accountId) {\n      this.loadAccount(accountId);\n    }\n  }\n  loadAccount(id) {\n    this.http.get(`/api/accounts/${id}`).subscribe({\n      next: account => {\n        this.account = account;\n      },\n      error: error => {\n        console.error('Error loading account:', error);\n        alert('Error loading account details.');\n      }\n    });\n  }\n  onDeposit() {\n    if (this.depositForm.valid && this.account) {\n      this.http.post(`/api/accounts/${this.account.id}/deposit`, {\n        amount: this.depositForm.value.amount\n      }).subscribe({\n        next: () => {\n          this.loadAccount(this.account.id);\n          this.depositForm.reset();\n        },\n        error: error => {\n          console.error('Error making deposit:', error);\n          alert('Error making deposit. Please try again.');\n        }\n      });\n    }\n  }\n  onWithdraw() {\n    if (this.withdrawForm.valid && this.account) {\n      this.http.post(`/api/accounts/${this.account.id}/withdraw`, {\n        amount: this.withdrawForm.value.amount\n      }).subscribe({\n        next: () => {\n          this.loadAccount(this.account.id);\n          this.withdrawForm.reset();\n        },\n        error: error => {\n          console.error('Error making withdrawal:', error);\n          alert('Error making withdrawal. Please try again.');\n        }\n      });\n    }\n  }\n  toggleAccountStatus() {\n    if (this.account) {\n      const endpoint = this.account.active ? 'block' : 'activate';\n      this.http.post(`/api/accounts/${this.account.id}/${endpoint}`, {}).subscribe({\n        next: () => {\n          this.loadAccount(this.account.id);\n        },\n        error: error => {\n          console.error('Error toggling account status:', error);\n          alert('Error changing account status. Please try again.');\n        }\n      });\n    }\n  }\n  static {\n    this.ɵfac = function AccountOperationsComponent_Factory(t) {\n      return new (t || AccountOperationsComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.HttpClient), i0.ɵɵdirectiveInject(i3.FormBuilder));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: AccountOperationsComponent,\n      selectors: [[\"app-account-operations\"]],\n      decls: 32,\n      vars: 6,\n      consts: [[\"class\", \"card mb-4\", 4, \"ngIf\"], [1, \"card\", \"mb-4\"], [1, \"card-header\"], [1, \"card-body\"], [3, \"ngSubmit\", \"formGroup\"], [1, \"mb-3\"], [\"for\", \"depositAmount\", 1, \"form-label\"], [\"type\", \"number\", \"id\", \"depositAmount\", \"formControlName\", \"amount\", 1, \"form-control\"], [\"type\", \"submit\", 1, \"btn\", \"btn-success\", 3, \"disabled\"], [\"for\", \"withdrawAmount\", 1, \"form-label\"], [\"type\", \"number\", \"id\", \"withdrawAmount\", \"formControlName\", \"amount\", 1, \"form-control\"], [\"type\", \"submit\", 1, \"btn\", \"btn-warning\", 3, \"disabled\"], [1, \"card\"], [1, \"btn\", \"btn-danger\", 3, \"click\"]],\n      template: function AccountOperationsComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵtemplate(0, AccountOperationsComponent_div_0_Template, 23, 8, \"div\", 0);\n          i0.ɵɵelementStart(1, \"div\", 1)(2, \"div\", 2)(3, \"h3\");\n          i0.ɵɵtext(4, \"Deposit\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(5, \"div\", 3)(6, \"form\", 4);\n          i0.ɵɵlistener(\"ngSubmit\", function AccountOperationsComponent_Template_form_ngSubmit_6_listener() {\n            return ctx.onDeposit();\n          });\n          i0.ɵɵelementStart(7, \"div\", 5)(8, \"label\", 6);\n          i0.ɵɵtext(9, \"Amount\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(10, \"input\", 7);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(11, \"button\", 8);\n          i0.ɵɵtext(12, \"Deposit\");\n          i0.ɵɵelementEnd()()()();\n          i0.ɵɵelementStart(13, \"div\", 1)(14, \"div\", 2)(15, \"h3\");\n          i0.ɵɵtext(16, \"Withdraw\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(17, \"div\", 3)(18, \"form\", 4);\n          i0.ɵɵlistener(\"ngSubmit\", function AccountOperationsComponent_Template_form_ngSubmit_18_listener() {\n            return ctx.onWithdraw();\n          });\n          i0.ɵɵelementStart(19, \"div\", 5)(20, \"label\", 9);\n          i0.ɵɵtext(21, \"Amount\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(22, \"input\", 10);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(23, \"button\", 11);\n          i0.ɵɵtext(24, \"Withdraw\");\n          i0.ɵɵelementEnd()()()();\n          i0.ɵɵelementStart(25, \"div\", 12)(26, \"div\", 2)(27, \"h3\");\n          i0.ɵɵtext(28, \"Account Status\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(29, \"div\", 3)(30, \"button\", 13);\n          i0.ɵɵlistener(\"click\", function AccountOperationsComponent_Template_button_click_30_listener() {\n            return ctx.toggleAccountStatus();\n          });\n          i0.ɵɵtext(31);\n          i0.ɵɵelementEnd()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵproperty(\"ngIf\", ctx.account);\n          i0.ɵɵadvance(6);\n          i0.ɵɵproperty(\"formGroup\", ctx.depositForm);\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"disabled\", !ctx.depositForm.valid);\n          i0.ɵɵadvance(7);\n          i0.ɵɵproperty(\"formGroup\", ctx.withdrawForm);\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"disabled\", !ctx.withdrawForm.valid);\n          i0.ɵɵadvance(8);\n          i0.ɵɵtextInterpolate1(\" \", (ctx.account == null ? null : ctx.account.active) ? \"Block Account\" : \"Activate Account\", \" \");\n        }\n      },\n      dependencies: [i4.NgIf, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NumberValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.FormGroupDirective, i3.FormControlName, i4.CurrencyPipe],\n      encapsulation: 2\n    });\n  }\n}","map":{"version":3,"names":["Validators","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate1","ctx_r0","account","id","ɵɵpipeBind1","balance","dailyWithdrawalLimit","active","AccountOperationsComponent","constructor","route","http","fb","depositForm","group","amount","required","min","withdrawForm","ngOnInit","accountId","snapshot","paramMap","get","loadAccount","subscribe","next","error","console","alert","onDeposit","valid","post","value","reset","onWithdraw","toggleAccountStatus","endpoint","ɵɵdirectiveInject","i1","ActivatedRoute","i2","HttpClient","i3","FormBuilder","selectors","decls","vars","consts","template","AccountOperationsComponent_Template","rf","ctx","ɵɵtemplate","AccountOperationsComponent_div_0_Template","ɵɵlistener","AccountOperationsComponent_Template_form_ngSubmit_6_listener","ɵɵelement","AccountOperationsComponent_Template_form_ngSubmit_18_listener","AccountOperationsComponent_Template_button_click_30_listener","ɵɵproperty"],"sources":["C:\\Users\\elias\\Downloads\\demo\\demo\\src\\app\\components\\account-operations\\account-operations.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\n\r\ninterface Account {\r\n  id: string;\r\n  balance: number;\r\n  dailyWithdrawalLimit: number;\r\n  active: boolean;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-account-operations',\r\n  template: `\r\n    <div class=\"card mb-4\" *ngIf=\"account\">\r\n      <div class=\"card-header\">\r\n        <h2>Account Details</h2>\r\n      </div>\r\n      <div class=\"card-body\">\r\n        <p><strong>Account ID:</strong> {{account.id}}</p>\r\n        <p><strong>Balance:</strong> {{account.balance | currency}}</p>\r\n        <p><strong>Daily Withdrawal Limit:</strong> {{account.dailyWithdrawalLimit | currency}}</p>\r\n        <p><strong>Status:</strong> {{account.active ? 'Active' : 'Blocked'}}</p>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"card mb-4\">\r\n      <div class=\"card-header\">\r\n        <h3>Deposit</h3>\r\n      </div>\r\n      <div class=\"card-body\">\r\n        <form [formGroup]=\"depositForm\" (ngSubmit)=\"onDeposit()\">\r\n          <div class=\"mb-3\">\r\n            <label for=\"depositAmount\" class=\"form-label\">Amount</label>\r\n            <input type=\"number\" class=\"form-control\" id=\"depositAmount\" formControlName=\"amount\">\r\n          </div>\r\n          <button type=\"submit\" class=\"btn btn-success\" [disabled]=\"!depositForm.valid\">Deposit</button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"card mb-4\">\r\n      <div class=\"card-header\">\r\n        <h3>Withdraw</h3>\r\n      </div>\r\n      <div class=\"card-body\">\r\n        <form [formGroup]=\"withdrawForm\" (ngSubmit)=\"onWithdraw()\">\r\n          <div class=\"mb-3\">\r\n            <label for=\"withdrawAmount\" class=\"form-label\">Amount</label>\r\n            <input type=\"number\" class=\"form-control\" id=\"withdrawAmount\" formControlName=\"amount\">\r\n          </div>\r\n          <button type=\"submit\" class=\"btn btn-warning\" [disabled]=\"!withdrawForm.valid\">Withdraw</button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"card\">\r\n      <div class=\"card-header\">\r\n        <h3>Account Status</h3>\r\n      </div>\r\n      <div class=\"card-body\">\r\n        <button class=\"btn btn-danger\" (click)=\"toggleAccountStatus()\">\r\n          {{account?.active ? 'Block Account' : 'Activate Account'}}\r\n        </button>\r\n      </div>\r\n    </div>\r\n  `,\r\n  styles: []\r\n})\r\nexport class AccountOperationsComponent implements OnInit {\r\n  account: Account | null = null;\r\n  depositForm: FormGroup;\r\n  withdrawForm: FormGroup;\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private http: HttpClient,\r\n    private fb: FormBuilder\r\n  ) {\r\n    this.depositForm = this.fb.group({\r\n      amount: ['', [Validators.required, Validators.min(0.01)]]\r\n    });\r\n    this.withdrawForm = this.fb.group({\r\n      amount: ['', [Validators.required, Validators.min(0.01)]]\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    const accountId = this.route.snapshot.paramMap.get('id');\r\n    if (accountId) {\r\n      this.loadAccount(accountId);\r\n    }\r\n  }\r\n\r\n  loadAccount(id: string) {\r\n    this.http.get<Account>(`/api/accounts/${id}`).subscribe({\r\n      next: (account) => {\r\n        this.account = account;\r\n      },\r\n      error: (error) => {\r\n        console.error('Error loading account:', error);\r\n        alert('Error loading account details.');\r\n      }\r\n    });\r\n  }\r\n\r\n  onDeposit() {\r\n    if (this.depositForm.valid && this.account) {\r\n      this.http.post(`/api/accounts/${this.account.id}/deposit`, {\r\n        amount: this.depositForm.value.amount\r\n      }).subscribe({\r\n        next: () => {\r\n          this.loadAccount(this.account!.id);\r\n          this.depositForm.reset();\r\n        },\r\n        error: (error) => {\r\n          console.error('Error making deposit:', error);\r\n          alert('Error making deposit. Please try again.');\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  onWithdraw() {\r\n    if (this.withdrawForm.valid && this.account) {\r\n      this.http.post(`/api/accounts/${this.account.id}/withdraw`, {\r\n        amount: this.withdrawForm.value.amount\r\n      }).subscribe({\r\n        next: () => {\r\n          this.loadAccount(this.account!.id);\r\n          this.withdrawForm.reset();\r\n        },\r\n        error: (error) => {\r\n          console.error('Error making withdrawal:', error);\r\n          alert('Error making withdrawal. Please try again.');\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  toggleAccountStatus() {\r\n    if (this.account) {\r\n      const endpoint = this.account.active ? 'block' : 'activate';\r\n      this.http.post(`/api/accounts/${this.account.id}/${endpoint}`, {}).subscribe({\r\n        next: () => {\r\n          this.loadAccount(this.account!.id);\r\n        },\r\n        error: (error) => {\r\n          console.error('Error toggling account status:', error);\r\n          alert('Error changing account status. Please try again.');\r\n        }\r\n      });\r\n    }\r\n  }\r\n} "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}