{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/common/http\";\nimport * as i3 from \"@angular/router\";\nexport class AccountFormComponent {\n  constructor(fb, http, router) {\n    this.fb = fb;\n    this.http = http;\n    this.router = router;\n    this.accountForm = this.fb.group({\n      id: ['', Validators.required],\n      balance: ['', [Validators.required, Validators.min(0)]],\n      dailyWithdrawalLimit: ['', [Validators.required, Validators.min(0)]]\n    });\n  }\n  onSubmit() {\n    if (this.accountForm.valid) {\n      this.http.post('/api/accounts', this.accountForm.value).subscribe({\n        next: response => {\n          console.log('Account created:', response);\n          this.router.navigate(['/operations', this.accountForm.value.id]);\n        },\n        error: error => {\n          console.error('Error creating account:', error);\n          alert('Error creating account. Please try again.');\n        }\n      });\n    }\n  }\n  static {\n    this.ɵfac = function AccountFormComponent_Factory(t) {\n      return new (t || AccountFormComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.HttpClient), i0.ɵɵdirectiveInject(i3.Router));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: AccountFormComponent,\n      selectors: [[\"app-account-form\"]],\n      decls: 20,\n      vars: 2,\n      consts: [[1, \"card\"], [1, \"card-header\"], [1, \"card-body\"], [3, \"ngSubmit\", \"formGroup\"], [1, \"mb-3\"], [\"for\", \"id\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"id\", \"formControlName\", \"id\", 1, \"form-control\"], [\"for\", \"balance\", 1, \"form-label\"], [\"type\", \"number\", \"id\", \"balance\", \"formControlName\", \"balance\", 1, \"form-control\"], [\"for\", \"dailyWithdrawalLimit\", 1, \"form-label\"], [\"type\", \"number\", \"id\", \"dailyWithdrawalLimit\", \"formControlName\", \"dailyWithdrawalLimit\", 1, \"form-control\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 3, \"disabled\"]],\n      template: function AccountFormComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h2\");\n          i0.ɵɵtext(3, \"Create Account\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(4, \"div\", 2)(5, \"form\", 3);\n          i0.ɵɵlistener(\"ngSubmit\", function AccountFormComponent_Template_form_ngSubmit_5_listener() {\n            return ctx.onSubmit();\n          });\n          i0.ɵɵelementStart(6, \"div\", 4)(7, \"label\", 5);\n          i0.ɵɵtext(8, \"Account ID\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(9, \"input\", 6);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(10, \"div\", 4)(11, \"label\", 7);\n          i0.ɵɵtext(12, \"Initial Balance\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(13, \"input\", 8);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(14, \"div\", 4)(15, \"label\", 9);\n          i0.ɵɵtext(16, \"Daily Withdrawal Limit\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(17, \"input\", 10);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(18, \"button\", 11);\n          i0.ɵɵtext(19, \"Create Account\");\n          i0.ɵɵelementEnd()()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"formGroup\", ctx.accountForm);\n          i0.ɵɵadvance(13);\n          i0.ɵɵproperty(\"disabled\", !ctx.accountForm.valid);\n        }\n      },\n      encapsulation: 2\n    });\n  }\n}","map":{"version":3,"names":["Validators","AccountFormComponent","constructor","fb","http","router","accountForm","group","id","required","balance","min","dailyWithdrawalLimit","onSubmit","valid","post","value","subscribe","next","response","console","log","navigate","error","alert","i0","ɵɵdirectiveInject","i1","FormBuilder","i2","HttpClient","i3","Router","selectors","decls","vars","consts","template","AccountFormComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","AccountFormComponent_Template_form_ngSubmit_5_listener","ɵɵelement","ɵɵadvance","ɵɵproperty"],"sources":["C:\\Users\\elias\\Downloads\\demo\\demo\\src\\app\\components\\account-form\\account-form.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-account-form',\r\n  template: `\r\n    <div class=\"card\">\r\n      <div class=\"card-header\">\r\n        <h2>Create Account</h2>\r\n      </div>\r\n      <div class=\"card-body\">\r\n        <form [formGroup]=\"accountForm\" (ngSubmit)=\"onSubmit()\">\r\n          <div class=\"mb-3\">\r\n            <label for=\"id\" class=\"form-label\">Account ID</label>\r\n            <input type=\"text\" class=\"form-control\" id=\"id\" formControlName=\"id\">\r\n          </div>\r\n          <div class=\"mb-3\">\r\n            <label for=\"balance\" class=\"form-label\">Initial Balance</label>\r\n            <input type=\"number\" class=\"form-control\" id=\"balance\" formControlName=\"balance\">\r\n          </div>\r\n          <div class=\"mb-3\">\r\n            <label for=\"dailyWithdrawalLimit\" class=\"form-label\">Daily Withdrawal Limit</label>\r\n            <input type=\"number\" class=\"form-control\" id=\"dailyWithdrawalLimit\" formControlName=\"dailyWithdrawalLimit\">\r\n          </div>\r\n          <button type=\"submit\" class=\"btn btn-primary\" [disabled]=\"!accountForm.valid\">Create Account</button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  `,\r\n  styles: []\r\n})\r\nexport class AccountFormComponent {\r\n  accountForm: FormGroup;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private http: HttpClient,\r\n    private router: Router\r\n  ) {\r\n    this.accountForm = this.fb.group({\r\n      id: ['', Validators.required],\r\n      balance: ['', [Validators.required, Validators.min(0)]],\r\n      dailyWithdrawalLimit: ['', [Validators.required, Validators.min(0)]]\r\n    });\r\n  }\r\n\r\n  onSubmit() {\r\n    if (this.accountForm.valid) {\r\n      this.http.post('/api/accounts', this.accountForm.value)\r\n        .subscribe({\r\n          next: (response) => {\r\n            console.log('Account created:', response);\r\n            this.router.navigate(['/operations', this.accountForm.value.id]);\r\n          },\r\n          error: (error) => {\r\n            console.error('Error creating account:', error);\r\n            alert('Error creating account. Please try again.');\r\n          }\r\n        });\r\n    }\r\n  }\r\n} "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}